; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\key.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\key.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\HARDWARE\LED -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\STM32F10x_FWLib\inc -I..\CORE -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\IAP -I..\HARDWARE\STMFLASH -I"C:\Users\77621\Desktop\实验47 串口IAP实验\IAP-Bootloader V1.0\USER\RTE" -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\key.crf ..\HARDWARE\KEY\key.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;18     //按键初始化函数
;;;19     void KEY_Init(void) //IO初始化
000000  b508              PUSH     {r3,lr}
;;;20     { 
;;;21      	GPIO_InitTypeDef GPIO_InitStructure;
;;;22      
;;;23      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOE,ENABLE);//使能PORTA,PORTE时钟
000002  2101              MOVS     r1,#1
000004  2044              MOVS     r0,#0x44
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;24     
;;;25     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_2|GPIO_Pin_3|GPIO_Pin_4;//KEY0-KEY2
00000a  201c              MOVS     r0,#0x1c
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;26     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; //设置成上拉输入
000010  2048              MOVS     r0,#0x48
000012  f88d0003          STRB     r0,[sp,#3]
;;;27      	GPIO_Init(GPIOE, &GPIO_InitStructure);//初始化GPIOE2,3,4
000016  4669              MOV      r1,sp
000018  4835              LDR      r0,|L1.240|
00001a  f7fffffe          BL       GPIO_Init
;;;28     
;;;29     	//初始化 WK_UP-->GPIOA.0	  下拉输入
;;;30     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_0;
00001e  2001              MOVS     r0,#1
000020  f8ad0000          STRH     r0,[sp,#0]
;;;31     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; //PA0设置成输入，默认下拉	  
000024  2028              MOVS     r0,#0x28
000026  f88d0003          STRB     r0,[sp,#3]
;;;32     	GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA.0
00002a  4669              MOV      r1,sp
00002c  4831              LDR      r0,|L1.244|
00002e  f7fffffe          BL       GPIO_Init
;;;33     
;;;34     }
000032  bd08              POP      {r3,pc}
;;;35     //按键处理函数
                          ENDP

                  KEY_Scan PROC
;;;43     //注意此函数有响应优先级,KEY0>KEY1>KEY2>KEY3!!
;;;44     u8 KEY_Scan(u8 mode)
000034  b510              PUSH     {r4,lr}
;;;45     {	 
000036  4604              MOV      r4,r0
;;;46     	static u8 key_up=1;//按键按松开标志
;;;47     	if(mode)key_up=1;  //支持连按		  
000038  b114              CBZ      r4,|L1.64|
00003a  2001              MOVS     r0,#1
00003c  492e              LDR      r1,|L1.248|
00003e  7008              STRB     r0,[r1,#0]
                  |L1.64|
;;;48     	if(key_up&&(KEY0==0||KEY1==0||KEY2==0||WK_UP==1))
000040  482d              LDR      r0,|L1.248|
000042  7800              LDRB     r0,[r0,#0]  ; key_up
000044  2800              CMP      r0,#0
000046  d037              BEQ      |L1.184|
000048  2110              MOVS     r1,#0x10
00004a  4829              LDR      r0,|L1.240|
00004c  f7fffffe          BL       GPIO_ReadInputDataBit
000050  b178              CBZ      r0,|L1.114|
000052  2108              MOVS     r1,#8
000054  4826              LDR      r0,|L1.240|
000056  f7fffffe          BL       GPIO_ReadInputDataBit
00005a  b150              CBZ      r0,|L1.114|
00005c  2104              MOVS     r1,#4
00005e  4824              LDR      r0,|L1.240|
000060  f7fffffe          BL       GPIO_ReadInputDataBit
000064  b128              CBZ      r0,|L1.114|
000066  2101              MOVS     r1,#1
000068  4822              LDR      r0,|L1.244|
00006a  f7fffffe          BL       GPIO_ReadInputDataBit
00006e  2801              CMP      r0,#1
000070  d122              BNE      |L1.184|
                  |L1.114|
;;;49     	{
;;;50     		delay_ms(10);//去抖动 
000072  200a              MOVS     r0,#0xa
000074  f7fffffe          BL       delay_ms
;;;51     		key_up=0;
000078  2000              MOVS     r0,#0
00007a  491f              LDR      r1,|L1.248|
00007c  7008              STRB     r0,[r1,#0]
;;;52     		if(KEY0==0)return KEY0_PRES;
00007e  2110              MOVS     r1,#0x10
000080  481b              LDR      r0,|L1.240|
000082  f7fffffe          BL       GPIO_ReadInputDataBit
000086  b908              CBNZ     r0,|L1.140|
000088  2001              MOVS     r0,#1
                  |L1.138|
;;;53     		else if(KEY1==0)return KEY1_PRES;
;;;54     		else if(KEY2==0)return KEY2_PRES;
;;;55     		else if(WK_UP==1)return WKUP_PRES;
;;;56     	}else if(KEY0==1&&KEY1==1&&KEY2==1&&WK_UP==0)key_up=1; 	    
;;;57      	return 0;// 无按键按下
;;;58     }
00008a  bd10              POP      {r4,pc}
                  |L1.140|
00008c  2108              MOVS     r1,#8                 ;53
00008e  4818              LDR      r0,|L1.240|
000090  f7fffffe          BL       GPIO_ReadInputDataBit
000094  b908              CBNZ     r0,|L1.154|
000096  2002              MOVS     r0,#2                 ;53
000098  e7f7              B        |L1.138|
                  |L1.154|
00009a  2104              MOVS     r1,#4                 ;54
00009c  4814              LDR      r0,|L1.240|
00009e  f7fffffe          BL       GPIO_ReadInputDataBit
0000a2  b908              CBNZ     r0,|L1.168|
0000a4  2003              MOVS     r0,#3                 ;54
0000a6  e7f0              B        |L1.138|
                  |L1.168|
0000a8  2101              MOVS     r1,#1                 ;55
0000aa  4812              LDR      r0,|L1.244|
0000ac  f7fffffe          BL       GPIO_ReadInputDataBit
0000b0  2801              CMP      r0,#1                 ;55
0000b2  d11b              BNE      |L1.236|
0000b4  2004              MOVS     r0,#4                 ;55
0000b6  e7e8              B        |L1.138|
                  |L1.184|
0000b8  2110              MOVS     r1,#0x10              ;56
0000ba  480d              LDR      r0,|L1.240|
0000bc  f7fffffe          BL       GPIO_ReadInputDataBit
0000c0  2801              CMP      r0,#1                 ;56
0000c2  d113              BNE      |L1.236|
0000c4  2108              MOVS     r1,#8                 ;56
0000c6  480a              LDR      r0,|L1.240|
0000c8  f7fffffe          BL       GPIO_ReadInputDataBit
0000cc  2801              CMP      r0,#1                 ;56
0000ce  d10d              BNE      |L1.236|
0000d0  2104              MOVS     r1,#4                 ;56
0000d2  4807              LDR      r0,|L1.240|
0000d4  f7fffffe          BL       GPIO_ReadInputDataBit
0000d8  2801              CMP      r0,#1                 ;56
0000da  d107              BNE      |L1.236|
0000dc  2101              MOVS     r1,#1                 ;56
0000de  4805              LDR      r0,|L1.244|
0000e0  f7fffffe          BL       GPIO_ReadInputDataBit
0000e4  b910              CBNZ     r0,|L1.236|
0000e6  2001              MOVS     r0,#1                 ;56
0000e8  4903              LDR      r1,|L1.248|
0000ea  7008              STRB     r0,[r1,#0]            ;56
                  |L1.236|
0000ec  2000              MOVS     r0,#0                 ;57
0000ee  e7cc              B        |L1.138|
                          ENDP

                  |L1.240|
                          DCD      0x40011800
                  |L1.244|
                          DCD      0x40010800
                  |L1.248|
                          DCD      key_up

                          AREA ||.data||, DATA, ALIGN=0

                  key_up
000000  01                DCB      0x01
