; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\iap.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\iap.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\HARDWARE\LED -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\STM32F10x_FWLib\inc -I..\CORE -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\IAP -I..\HARDWARE\STMFLASH -I..\HARDWARE\LED -I..\HARDWARE\Tim2 -I..\HARDWARE\IO -I"E:\TH\RTU\RTU开发程序\IAP-Bootloader V1.0\USER\RTE" -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_XL -DSTM32F10X_XHD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\iap.crf ..\IAP\iap.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  iap_write_appbin PROC
;;;14     //appsize:应用程序大小(字节).
;;;15     void iap_write_appbin(u32 appxaddr,u8 *appbuf,u32 appsize)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;16     {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
;;;17     	u16 t;
;;;18     	u16 i=0;
00000a  2400              MOVS     r4,#0
;;;19     	u16 temp;
;;;20     	u32 fwaddr=appxaddr;//当前写入的地址
00000c  46b3              MOV      r11,r6
;;;21     	u8 *dfu=appbuf;
00000e  463d              MOV      r5,r7
;;;22     	for(t=0;t<appsize;t+=2)
000010  46a1              MOV      r9,r4
000012  e01c              B        |L1.78|
                  |L1.20|
;;;23     	{						    
;;;24     		temp=(u16)dfu[1]<<8;
000014  7868              LDRB     r0,[r5,#1]
000016  ea4f2a00          LSL      r10,r0,#8
;;;25     		temp+=(u16)dfu[0];	  
00001a  7828              LDRB     r0,[r5,#0]
00001c  4450              ADD      r0,r0,r10
00001e  fa1ffa80          UXTH     r10,r0
;;;26     		dfu+=2;//偏移2个字节
000022  1cad              ADDS     r5,r5,#2
;;;27     		iapbuf[i++]=temp;	    
000024  4620              MOV      r0,r4
000026  1c61              ADDS     r1,r4,#1
000028  b28c              UXTH     r4,r1
00002a  4917              LDR      r1,|L1.136|
00002c  f821a010          STRH     r10,[r1,r0,LSL #1]
;;;28     		if(i==1024)
000030  f5b46f80          CMP      r4,#0x400
000034  d107              BNE      |L1.70|
;;;29     		{
;;;30     			i=0;
000036  2400              MOVS     r4,#0
;;;31     			STMFLASH_Write(fwaddr,iapbuf,1024);	
000038  f44f6280          MOV      r2,#0x400
00003c  4658              MOV      r0,r11
00003e  f7fffffe          BL       STMFLASH_Write
;;;32     			fwaddr+=2048;//偏移2048  16=2*8.所以要乘以2.
000042  f50b6b00          ADD      r11,r11,#0x800
                  |L1.70|
000046  f1090002          ADD      r0,r9,#2              ;22
00004a  fa1ff980          UXTH     r9,r0                 ;22
                  |L1.78|
00004e  45c1              CMP      r9,r8                 ;22
000050  d3e0              BCC      |L1.20|
;;;33     		}
;;;34     	}
;;;35     	if(i)STMFLASH_Write(fwaddr,iapbuf,i);//将最后的一些内容字节写进去.  
000052  b124              CBZ      r4,|L1.94|
000054  4622              MOV      r2,r4
000056  490c              LDR      r1,|L1.136|
000058  4658              MOV      r0,r11
00005a  f7fffffe          BL       STMFLASH_Write
                  |L1.94|
;;;36     }
00005e  e8bd9ff0          POP      {r4-r12,pc}
;;;37     
                          ENDP

                  iap_load_app PROC
;;;39     //appxaddr:用户代码起始地址.
;;;40     void iap_load_app(u32 appxaddr)
000062  b510              PUSH     {r4,lr}
;;;41     {
000064  4604              MOV      r4,r0
;;;42     	if(((*(vu32*)appxaddr)&0x2FFE0000)==0x20000000)	//检查栈顶地址是否合法.
000066  6820              LDR      r0,[r4,#0]
000068  4908              LDR      r1,|L1.140|
00006a  4008              ANDS     r0,r0,r1
00006c  f1b05f00          CMP      r0,#0x20000000
000070  d108              BNE      |L1.132|
;;;43     	{ 
;;;44     		jump2app=(iapfun)*(vu32*)(appxaddr+4);		//用户代码区第二个字为程序开始地址(复位地址)		
000072  6860              LDR      r0,[r4,#4]
000074  4906              LDR      r1,|L1.144|
000076  6008              STR      r0,[r1,#0]  ; jump2app
;;;45     		MSR_MSP(*(vu32*)appxaddr);					//初始化APP堆栈指针(用户代码区的第一个字用于存放栈顶地址) 
000078  6820              LDR      r0,[r4,#0]
00007a  f7fffffe          BL       MSR_MSP
;;;46     		jump2app();									//跳转到APP.
00007e  4804              LDR      r0,|L1.144|
000080  6800              LDR      r0,[r0,#0]  ; jump2app
000082  4780              BLX      r0
                  |L1.132|
;;;47     	}
;;;48     }		 
000084  bd10              POP      {r4,pc}
;;;49     
                          ENDP

000086  0000              DCW      0x0000
                  |L1.136|
                          DCD      iapbuf
                  |L1.140|
                          DCD      0x2ffe0000
                  |L1.144|
                          DCD      jump2app

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  iapbuf
                          %        2048

                          AREA ||.data||, DATA, ALIGN=2

                  jump2app
                          DCD      0x00000000
