; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o..\obj\led.o --asm_dir=.\ --list_dir=.\ --depend=..\obj\led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\HARDWARE\LED -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\USER -I..\STM32F10x_FWLib\inc -I..\CORE -I..\HARDWARE\KEY -I..\HARDWARE\LCD -I..\IAP -I..\HARDWARE\STMFLASH -I..\HARDWARE\LED -I..\HARDWARE\Tim2 -I..\HARDWARE\IO -I"E:\TH\RTU\RTU开发程序\IAP-Bootloader V1.0\USER\RTE" -ID:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_XL -DSTM32F10X_XHD -DUSE_STDPERIPH_DRIVER --omf_browse=..\obj\led.crf ..\HARDWARE\LED\Led.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LED_Init PROC
;;;12     //LED IO初始化
;;;13     void LED_Init(void)
000000  b508              PUSH     {r3,lr}
;;;14     {
;;;15     	
;;;16     	GPIO_InitTypeDef  GPIO_InitStructure;
;;;17     	/* Enable the GPIO_LED Clock */
;;;18     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE); 		
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;19     	
;;;20     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11 | GPIO_Pin_12;
00000a  f44f50c0          MOV      r0,#0x1800
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;21     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000012  2010              MOVS     r0,#0x10
000014  f88d0003          STRB     r0,[sp,#3]
;;;22     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000018  2003              MOVS     r0,#3
00001a  f88d0002          STRB     r0,[sp,#2]
;;;23     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00001e  4669              MOV      r1,sp
000020  484f              LDR      r0,|L1.352|
000022  f7fffffe          BL       GPIO_Init
;;;24     	/*初始化完后，关闭2个LED*/ 
;;;25     	LED1 = OFF;
000026  2001              MOVS     r0,#1
000028  494e              LDR      r1,|L1.356|
00002a  6008              STR      r0,[r1,#0]
;;;26     	LED2 = OFF;
00002c  494e              LDR      r1,|L1.360|
00002e  f8c101b0          STR      r0,[r1,#0x1b0]
;;;27     	//初始化定时器2
;;;28     	Tim2_Init();
000032  f7fffffe          BL       Tim2_Init
;;;29     
;;;30     }
000036  bd08              POP      {r3,pc}
;;;31     //正在工作
                          ENDP

                  LED_Running PROC
;;;32     void LED_Running()
000038  b510              PUSH     {r4,lr}
;;;33     {
;;;34     		TIM_Cmd(TIM2,DISABLE);
00003a  2100              MOVS     r1,#0
00003c  f04f4080          MOV      r0,#0x40000000
000040  f7fffffe          BL       TIM_Cmd
;;;35     		LED1 = ON;
000044  2000              MOVS     r0,#0
000046  4947              LDR      r1,|L1.356|
000048  6008              STR      r0,[r1,#0]
;;;36     		
;;;37     }
00004a  bd10              POP      {r4,pc}
;;;38     //正在发信
                          ENDP

                  LED_COMing PROC
;;;39     void LED_COMing()
00004c  b510              PUSH     {r4,lr}
;;;40     {
;;;41     		TIM_Cmd(TIM2,DISABLE);
00004e  2100              MOVS     r1,#0
000050  f04f4080          MOV      r0,#0x40000000
000054  f7fffffe          BL       TIM_Cmd
;;;42     		LED2 = ON;
000058  2000              MOVS     r0,#0
00005a  4942              LDR      r1,|L1.356|
00005c  1d09              ADDS     r1,r1,#4
00005e  6008              STR      r0,[r1,#0]
;;;43     		
;;;44     }
000060  bd10              POP      {r4,pc}
;;;45     //不工作，深度休眠
                          ENDP

                  LED_Sleep PROC
;;;46     void LED_Sleep()
000062  b510              PUSH     {r4,lr}
;;;47     {
;;;48     		TIM_Cmd(TIM2,DISABLE);	
000064  2100              MOVS     r1,#0
000066  f04f4080          MOV      r0,#0x40000000
00006a  f7fffffe          BL       TIM_Cmd
;;;49     		LED1 = OFF;
00006e  2001              MOVS     r0,#1
000070  493c              LDR      r1,|L1.356|
000072  6008              STR      r0,[r1,#0]
;;;50     			
;;;51     }
000074  bd10              POP      {r4,pc}
;;;52     //发信结束
                          ENDP

                  LED_COMFinish PROC
;;;53     void LED_COMFinish()
000076  b510              PUSH     {r4,lr}
;;;54     {
;;;55     		TIM_Cmd(TIM2,DISABLE);
000078  2100              MOVS     r1,#0
00007a  f04f4080          MOV      r0,#0x40000000
00007e  f7fffffe          BL       TIM_Cmd
;;;56     		LED2 = OFF;
000082  2001              MOVS     r0,#1
000084  4937              LDR      r1,|L1.356|
000086  1d09              ADDS     r1,r1,#4
000088  6008              STR      r0,[r1,#0]
;;;57     		
;;;58     }
00008a  bd10              POP      {r4,pc}
;;;59     //正工作在调试状态
                          ENDP

                  LED_Debug PROC
;;;60     void LED_Debug()//2s间闪
00008c  b510              PUSH     {r4,lr}
;;;61     {
;;;62     		LED_Para.CountRun_Max = LED_SLOW;
00008e  2028              MOVS     r0,#0x28
000090  4936              LDR      r1,|L1.364|
000092  8008              STRH     r0,[r1,#0]
;;;63     		LED_Para.CounterCom = 0;
000094  2000              MOVS     r0,#0
000096  80c8              STRH     r0,[r1,#6]
;;;64     		TIM_Cmd(TIM2,ENABLE);
000098  2101              MOVS     r1,#1
00009a  0788              LSLS     r0,r1,#30
00009c  f7fffffe          BL       TIM_Cmd
;;;65     }
0000a0  bd10              POP      {r4,pc}
;;;66     //一起表示数据下载成功
                          ENDP

                  LED_DownloadOK PROC
;;;67     void LED_DownloadOK()//500ms慢闪
0000a2  b510              PUSH     {r4,lr}
;;;68     {
;;;69     		LED_Para.CountRun_Max = LED_MID;
0000a4  200a              MOVS     r0,#0xa
0000a6  4931              LDR      r1,|L1.364|
0000a8  8008              STRH     r0,[r1,#0]
;;;70     		LED_Para.CounterRun = 0;
0000aa  2000              MOVS     r0,#0
0000ac  8088              STRH     r0,[r1,#4]
;;;71     		LED_Para.CountCom_Max = LED_MID;
0000ae  200a              MOVS     r0,#0xa
0000b0  8048              STRH     r0,[r1,#2]
;;;72     		LED_Para.CounterCom = 0;
0000b2  2000              MOVS     r0,#0
0000b4  80c8              STRH     r0,[r1,#6]
;;;73     		TIM_Cmd(TIM2,ENABLE);
0000b6  2101              MOVS     r1,#1
0000b8  0788              LSLS     r0,r1,#30
0000ba  f7fffffe          BL       TIM_Cmd
;;;74     }
0000be  bd10              POP      {r4,pc}
;;;75     //TEST按下超过5秒或者程序更新成功
                          ENDP

                  LED_ProgramOK PROC
;;;76     void LED_ProgramOK()//50ms快闪
0000c0  b510              PUSH     {r4,lr}
;;;77     {
;;;78     		LED_Para.CountRun_Max = LED_FAST;
0000c2  2001              MOVS     r0,#1
0000c4  4929              LDR      r1,|L1.364|
0000c6  8008              STRH     r0,[r1,#0]
;;;79     		LED_Para.CounterRun = 0;
0000c8  2000              MOVS     r0,#0
0000ca  8088              STRH     r0,[r1,#4]
;;;80     		TIM_Cmd(TIM2,ENABLE);
0000cc  2101              MOVS     r1,#1
0000ce  0788              LSLS     r0,r1,#30
0000d0  f7fffffe          BL       TIM_Cmd
;;;81     }
0000d4  bd10              POP      {r4,pc}
;;;82     //发信失败
                          ENDP

                  LED_COMFailed PROC
;;;83     void LED_COMFailed()//50ms快闪
0000d6  b510              PUSH     {r4,lr}
;;;84     {
;;;85     		LED_Para.CountCom_Max = LED_FAST;
0000d8  2001              MOVS     r0,#1
0000da  4924              LDR      r1,|L1.364|
0000dc  8048              STRH     r0,[r1,#2]
;;;86     		LED_Para.CounterCom = 0;
0000de  2000              MOVS     r0,#0
0000e0  80c8              STRH     r0,[r1,#6]
;;;87     		TIM_Cmd(TIM2,ENABLE);
0000e2  2101              MOVS     r1,#1
0000e4  0788              LSLS     r0,r1,#30
0000e6  f7fffffe          BL       TIM_Cmd
;;;88     }
0000ea  bd10              POP      {r4,pc}
;;;89     
                          ENDP

                  TIM2_IRQHandler PROC
;;;91     //每隔	time（50ms）中断一次
;;;92     void TIM2_IRQHandler(void)
0000ec  b510              PUSH     {r4,lr}
;;;93     {
;;;94     	if(TIM_GetITStatus(TIM2,TIM_IT_Update) != RESET) 
0000ee  2101              MOVS     r1,#1
0000f0  0788              LSLS     r0,r1,#30
0000f2  f7fffffe          BL       TIM_GetITStatus
0000f6  b370              CBZ      r0,|L1.342|
;;;95     	{
;;;96     		if(LED_Para.CountRun_Max)//Run运行最大值不为0
0000f8  481c              LDR      r0,|L1.364|
0000fa  8800              LDRH     r0,[r0,#0]  ; LED_Para
0000fc  b198              CBZ      r0,|L1.294|
;;;97     		{
;;;98     			if(LED_Para.CounterRun >= LED_Para.CountRun_Max)
0000fe  481b              LDR      r0,|L1.364|
000100  8880              LDRH     r0,[r0,#4]  ; LED_Para
000102  491a              LDR      r1,|L1.364|
000104  8809              LDRH     r1,[r1,#0]  ; LED_Para
000106  4288              CMP      r0,r1
000108  db08              BLT      |L1.284|
;;;99     			{
;;;100    					LED_Para.CounterRun = 0;
00010a  2000              MOVS     r0,#0
00010c  4917              LDR      r1,|L1.364|
00010e  8088              STRH     r0,[r1,#4]
;;;101    					LED1 = ~LED1;
000110  4814              LDR      r0,|L1.356|
000112  6800              LDR      r0,[r0,#0]
000114  43c0              MVNS     r0,r0
000116  4914              LDR      r1,|L1.360|
000118  f8c101ac          STR      r0,[r1,#0x1ac]
                  |L1.284|
;;;102    			}
;;;103    			LED_Para.CounterRun++;
00011c  4813              LDR      r0,|L1.364|
00011e  8880              LDRH     r0,[r0,#4]  ; LED_Para
000120  1c40              ADDS     r0,r0,#1
000122  4912              LDR      r1,|L1.364|
000124  8088              STRH     r0,[r1,#4]
                  |L1.294|
;;;104    		}
;;;105    		if(LED_Para.CountCom_Max)//Com运行最大值不为0
000126  4811              LDR      r0,|L1.364|
000128  8840              LDRH     r0,[r0,#2]  ; LED_Para
00012a  b1a0              CBZ      r0,|L1.342|
;;;106    		{	
;;;107    			if(LED_Para.CounterCom >= LED_Para.CountCom_Max)
00012c  480f              LDR      r0,|L1.364|
00012e  88c0              LDRH     r0,[r0,#6]  ; LED_Para
000130  490e              LDR      r1,|L1.364|
000132  8849              LDRH     r1,[r1,#2]  ; LED_Para
000134  4288              CMP      r0,r1
000136  db09              BLT      |L1.332|
;;;108    			{
;;;109    					LED_Para.CounterCom = 0;
000138  2000              MOVS     r0,#0
00013a  490c              LDR      r1,|L1.364|
00013c  80c8              STRH     r0,[r1,#6]
;;;110    					LED2 = ~LED2;
00013e  4809              LDR      r0,|L1.356|
000140  1d00              ADDS     r0,r0,#4
000142  6800              LDR      r0,[r0,#0]
000144  43c0              MVNS     r0,r0
000146  4908              LDR      r1,|L1.360|
000148  f8c101b0          STR      r0,[r1,#0x1b0]
                  |L1.332|
;;;111    			}
;;;112    			LED_Para.CounterCom++;
00014c  4807              LDR      r0,|L1.364|
00014e  88c0              LDRH     r0,[r0,#6]  ; LED_Para
000150  1c40              ADDS     r0,r0,#1
000152  4906              LDR      r1,|L1.364|
000154  80c8              STRH     r0,[r1,#6]
                  |L1.342|
;;;113    		}
;;;114    	}
;;;115    	TIM_ClearITPendingBit(TIM2,TIM_FLAG_Update);
000156  2101              MOVS     r1,#1
000158  0788              LSLS     r0,r1,#30
00015a  f7fffffe          BL       TIM_ClearITPendingBit
;;;116    }
00015e  bd10              POP      {r4,pc}
;;;117    
                          ENDP

                  |L1.352|
                          DCD      0x40010800
                  |L1.356|
                          DCD      0x422101ac
                  |L1.360|
                          DCD      0x42210000
                  |L1.364|
                          DCD      LED_Para

                          AREA ||.data||, DATA, ALIGN=1

                  LED_Para
                          %        8
